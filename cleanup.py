#!/usr/bin/env python3
"""
Script ƒë·ªÉ d·ªçn d·∫πp file r√°c trong d·ª± √°n FastAPI
Ch·∫°y script n√†y ƒë·ªãnh k·ª≥ ƒë·ªÉ gi·ªØ d·ª± √°n s·∫°ch s·∫Ω
"""

import os
import shutil
import glob
from pathlib import Path

def clean_python_cache():
    """X√≥a t·∫•t c·∫£ th∆∞ m·ª•c __pycache__ v√† file .pyc"""
    print("üßπ ƒêang x√≥a Python cache files...")
    
    # X√≥a th∆∞ m·ª•c __pycache__
    for root, dirs, files in os.walk('.'):
        for dir_name in dirs:
            if dir_name == '__pycache__':
                cache_path = os.path.join(root, dir_name)
                print(f"  X√≥a: {cache_path}")
                shutil.rmtree(cache_path, ignore_errors=True)
    
    # X√≥a file .pyc
    for pyc_file in glob.glob('**/*.pyc', recursive=True):
        print(f"  X√≥a: {pyc_file}")
        os.remove(pyc_file)

def clean_temp_files():
    """X√≥a c√°c file t·∫°m th·ªùi"""
    print("üßπ ƒêang x√≥a file t·∫°m th·ªùi...")
    
    temp_patterns = [
        '**/*.tmp',
        '**/*.temp',
        '**/*~',
        '**/.DS_Store',
        '**/Thumbs.db',
        '**/desktop.ini'
    ]
    
    for pattern in temp_patterns:
        for file_path in glob.glob(pattern, recursive=True):
            print(f"  X√≥a: {file_path}")
            os.remove(file_path)

def clean_logs():
    """X√≥a file log c≈©"""
    print("üßπ ƒêang x√≥a file log...")
    
    log_patterns = [
        '**/*.log',
        '**/logs/**'
    ]
    
    for pattern in log_patterns:
        for file_path in glob.glob(pattern, recursive=True):
            if os.path.isfile(file_path):
                print(f"  X√≥a: {file_path}")
                os.remove(file_path)

def clean_coverage():
    """X√≥a file coverage"""
    print("üßπ ƒêang x√≥a file coverage...")
    
    coverage_patterns = [
        '**/.coverage*',
        '**/htmlcov/**',
        '**/.pytest_cache/**',
        '**/.mypy_cache/**'
    ]
    
    for pattern in coverage_patterns:
        for file_path in glob.glob(pattern, recursive=True):
            if os.path.isfile(file_path):
                print(f"  X√≥a: {file_path}")
                os.remove(file_path)
            elif os.path.isdir(file_path):
                print(f"  X√≥a th∆∞ m·ª•c: {file_path}")
                shutil.rmtree(file_path, ignore_errors=True)

def main():
    """H√†m ch√≠nh ƒë·ªÉ d·ªçn d·∫πp"""
    print("üöÄ B·∫Øt ƒë·∫ßu d·ªçn d·∫πp d·ª± √°n...")
    print("=" * 50)
    
    try:
        clean_python_cache()
        clean_temp_files()
        clean_logs()
        clean_coverage()
        
        print("=" * 50)
        print("‚úÖ Ho√†n th√†nh d·ªçn d·∫πp!")
        print("üí° Tip: Ch·∫°y script n√†y ƒë·ªãnh k·ª≥ ƒë·ªÉ gi·ªØ d·ª± √°n s·∫°ch s·∫Ω")
        
    except Exception as e:
        print(f"‚ùå L·ªói trong qu√° tr√¨nh d·ªçn d·∫πp: {e}")

if __name__ == "__main__":
    main()
