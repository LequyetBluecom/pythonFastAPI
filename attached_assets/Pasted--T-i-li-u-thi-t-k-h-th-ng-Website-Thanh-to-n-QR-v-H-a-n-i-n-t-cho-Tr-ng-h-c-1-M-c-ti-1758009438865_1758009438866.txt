# Tài liệu thiết kế hệ thống Website Thanh toán QR và Hóa đơn điện tử cho Trường học

## 1. Mục tiêu hệ thống

* Cho phép phụ huynh thanh toán học phí qua QR code (sử dụng API công ty cung cấp).
* Sau thanh toán, hệ thống tự động phát hành **hóa đơn điện tử** hợp lệ (theo quy định cơ quan thuế).
* Cung cấp khả năng xuất hóa đơn PDF, gửi email cho phụ huynh.
* Hỗ trợ **in hóa đơn** qua mạng LAN/WAN.
* Đảm bảo **quản lý tập trung**, có phân quyền quản trị (kế toán, giáo vụ, admin).
* Lưu trữ và tra cứu hóa đơn nhanh chóng khi phụ huynh hoặc cơ quan thuế yêu cầu.

---

## 2. Yêu cầu nghiệp vụ

1. **Thanh toán**:

   * Phụ huynh có thể chọn khoản phí (học phí, bán trú, đồng phục…).
   * Sinh QR code cho mỗi giao dịch.
   * Hệ thống ghi nhận và đối soát thanh toán.

2. **Quản lý học sinh & đơn hàng**:

   * Gắn học sinh với phụ huynh.
   * Mỗi đơn hàng gắn với một học sinh cụ thể.
   * Quản lý trạng thái đơn hàng: pending → paid → invoiced.

3. **Hóa đơn điện tử**:

   * Hóa đơn được phát hành ngay khi xác nhận thanh toán thành công.
   * Phát hành qua API nhà cung cấp HĐĐT.
   * Lưu cả XML (file gốc hợp pháp) và PDF (bản thể hiện).
   * Có chức năng gửi hóa đơn qua email, tra cứu lại hóa đơn.

4. **Báo cáo và đối soát**:

   * Báo cáo thu theo ngày, tháng, lớp, học sinh.
   * Đối soát giữa thanh toán thực tế và hóa đơn đã phát hành.
   * Xuất Excel cho kế toán.

5. **In hóa đơn**:

   * Cho phép in trực tiếp tại trường (LAN).
   * Cho phép in từ xa (WAN) thông qua Print Agent.
   * Lưu log các lệnh in.

6. **Quản lý người dùng & phân quyền**:

   * Admin: quản trị hệ thống.
   * Kế toán: xuất/tra cứu hóa đơn, đối soát.
   * Giáo vụ: tạo đơn phí cho học sinh.
   * Phụ huynh: chỉ xem và thanh toán.

7. **Tuân thủ pháp lý**:

   * Theo Nghị định 123/2020/NĐ-CP và các thông tư liên quan.
   * Hóa đơn điện tử phải hợp lệ, có mã của cơ quan thuế.
   * Lưu trữ chứng từ ít nhất 10 năm theo quy định.

---

## 3. Use Case chi tiết

### UC1: Phụ huynh thanh toán học phí

* Diễn viên: Phụ huynh.
* Luồng:

  1. Đăng nhập vào hệ thống.
  2. Chọn học sinh và khoản phí cần thanh toán.
  3. Nhận QR code và quét để thanh toán.
  4. Nhận email xác nhận và hóa đơn điện tử (sau khi thanh toán thành công).

### UC2: Giáo vụ tạo đơn phí cho học sinh

* Diễn viên: Giáo vụ.
* Luồng:

  1. Đăng nhập vào hệ thống.
  2. Chọn lớp/học sinh.
  3. Nhập khoản phí (học phí, bán trú, đồng phục…).
  4. Lưu đơn để phụ huynh có thể thanh toán.

### UC3: Kế toán phát hành và tra cứu hóa đơn

* Diễn viên: Kế toán.
* Luồng:

  1. Đăng nhập vào hệ thống.
  2. Tra cứu các đơn đã thanh toán.
  3. Hệ thống tự động phát hành HĐĐT.
  4. Kế toán có thể tải PDF/XML, gửi lại email cho phụ huynh khi cần.

### UC4: Admin quản trị hệ thống

* Diễn viên: Admin.
* Luồng:

  1. Quản lý tài khoản người dùng.
  2. Quản lý máy in, cấu hình agent in.
  3. Xem báo cáo tổng hợp toàn hệ thống.
  4. Kiểm tra log và đối soát dữ liệu.

### UC5: In hóa đơn tại trường

* Diễn viên: Kế toán/giáo vụ.
* Luồng:

  1. Chọn hóa đơn cần in.
  2. Gửi lệnh in qua LAN hoặc WAN.
  3. Máy in in hóa đơn.
  4. Log lưu lại thông tin lệnh in.

---

## 4. Kiến trúc hệ thống

### Thành phần chính

1. **Frontend (React + Tailwind)**.
2. **Backend API (Python FastAPI)**.
3. **Database (MySQL)**.
4. **PDF Generator**: WeasyPrint hoặc wkhtmltopdf.
5. **Print Agent (Python service)**.

### Luồng xử lý

1. Phụ huynh chọn khoản phí → tạo đơn.
2. Backend trả QR code.
3. Phụ huynh thanh toán QR → công ty gọi Webhook.
4. Backend xác nhận → cập nhật đơn hàng.
5. Backend gọi API nhà cung cấp HĐĐT → phát hành hóa đơn.
6. Lưu PDF/XML, gửi email, đồng thời gửi job in nếu cần.

---

## 5. Cấu trúc Database (tóm tắt)

```sql
users(id, name, email, role)
students(id, user_id, name, class, code)
orders(id, student_id, amount, status, created_at)
payments(id, order_id, gateway_txn_id, status, paid_at)
invoices(id, order_id, invoice_number, pdf_path, xml_path, issued_at, e_invoice_code)
printers(id, location, agent_id, type)
printer_agents(id, host_id, last_seen, jwt_token)
```

---

## 6. API Endpoints (chính)

* `POST /api/orders` → tạo đơn, trả về QR.
* `POST /api/payments/webhook` → nhận thông báo thanh toán.
* `POST /api/invoices/generate` → phát hành hóa đơn.
* `GET /api/invoices/:id` → lấy PDF/XML hóa đơn.
* `POST /api/print` → gửi lệnh in.
* `GET /api/reports` → báo cáo/đối soát.

---

## 7. Công nghệ đề xuất

* **Backend**: Python FastAPI + SQLAlchemy + Alembic.
* **Frontend**: React + Tailwind.
* **DB**: MySQL.
* **PDF**: WeasyPrint hoặc wkhtmltopdf.
* **Agent**: Python service.
* **Queue**: Redis/Celery (xử lý email, in, phát hành HĐĐT).
