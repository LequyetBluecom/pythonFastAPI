import os
import uvicorn
from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
from sqlalchemy.orm import Session
from app.database import SessionLocal, engine, get_db
from app.models import Base
from app.routers import auth, users, students, orders, payments, invoices, dashboard, print_management
from fastapi.middleware.cors import CORSMiddleware

# T·∫°o c√°c b·∫£ng trong database
Base.metadata.create_all(bind=engine)

# Kh·ªüi t·∫°o app
app = FastAPI(
    title="H·ªá th·ªëng Thanh to√°n QR Tr∆∞·ªùng h·ªçc",
    description="API cho h·ªá th·ªëng thanh to√°n h·ªçc ph√≠ v√† ph√°t h√†nh h√≥a ƒë∆°n ƒëi·ªán t·ª≠",
    version="1.0.0"
)

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Trong production, ch·ªâ ƒë·ªãnh c·ª• th·ªÉ domain
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include routers
app.include_router(auth.router, prefix="/api/auth", tags=["Authentication"])
app.include_router(users.router, prefix="/api/users", tags=["Users"])
app.include_router(students.router, prefix="/api/students", tags=["Students"])
app.include_router(orders.router, prefix="/api/orders", tags=["Orders"])
app.include_router(payments.router, prefix="/api/payments", tags=["Payments"])
app.include_router(invoices.router, prefix="/api/invoices", tags=["Invoices"])
app.include_router(dashboard.router, prefix="/api/dashboard", tags=["Dashboard & Reports"])
app.include_router(print_management.router, prefix="/api/print", tags=["Print Management"])

# Route ch√≠nh
@app.get("/")
def read_root():
    return {
        "message": "H·ªá th·ªëng Thanh to√°n QR Tr∆∞·ªùng h·ªçc üè´",
        "version": "1.0.0",
        "docs": "/docs",
        "features": [
            "Thanh to√°n QR code",
            "H√≥a ƒë∆°n ƒëi·ªán t·ª≠",
            "Qu·∫£n l√Ω h·ªçc sinh",
            "B√°o c√°o ƒë·ªëi so√°t"
        ]
    }

# Health check endpoint
@app.get("/healthz")
def health_check():
    return {"status": "healthy", "service": "school-payment-system"}

# Production server entry point
if __name__ == "__main__":
    port = int(os.getenv("PORT", "5000"))
    uvicorn.run(app, host="0.0.0.0", port=port)
